name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Which environment to deploy AWS resources for?
        options:
          - demo
          - prod

jobs:
  test-lint:
    uses: ./.github/workflows/test-and-lint.yml
    name: Test and Lint
    secrets: 
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    needs: [test-lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set vars
        id: set_workspace
        run:  |
          if [[ $GITHUB_REF == 'refs/heads/prod' ]]; then
            echo "prod" > .workspace
          else
          echo "demo" > .workspace
          fi
          echo "Workspace set to $(cat .workspace)"
          echo "workspace=$(cat .workspace)" >> "$GITHUB_OUTPUT"
      - name: Push to ECR
        env: 
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          docker build --compress -t ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA .
          docker push ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA
          docker build --compress -t ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA proxy/
          docker push ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA
      - name: Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
          TF_VAR_az_client_id: ${{ secrets.TF_VAR_AZ_CLIENT_ID }}
          TF_VAR_az_tenant_id: ${{ secrets.TF_VAR_AZ_TENANT_ID }}
          TF_VAR_users_table: ${{ vars.USERS_TABLE}}
          TF_VAR_auth_secret: ${{ secrets.TF_VAR_AUTH_SECRET }}
          TF_VAR_cd_github_access_token:  ${{ secrets.TF_VAR_CD_GITHUB_ACCESS_TOKEN }}
          TF_VAR_django_secret_key: ${{ secrets.TF_VAR_DJANGO_SECRET_KEY }}
          TF_VAR_collection_name: ${{ vars.COLLECTION_NAME }}
                  
        run: |
          workspace="${{ steps.set_workspace.outputs.workspace }}"
          echo "Using workspace: $workspace"
          export TF_WORKSPACE="$workspace"
          export TF_VAR_ecr_app_image="${{ vars.ECR_REPO_APP }}:$GITHUB_SHA"
          export TF_VAR_ecr_proxy_image="${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA"
          export TF_VAR_ecr_tools_image="${{ vars.ECR_REPO_TOOLS }}:latest"
          cd infra/
          docker compose run -e TF_WORKSPACE --rm terraform -chdir=deploy/ init
          docker compose run -e TF_WORKSPACE --rm terraform -chdir=deploy/ workspace select -or-create "TF_WORKSPACE"
          docker compose run -e TF_WORKSPACE --rm terraform -chdir=deploy/ apply -auto-approve




