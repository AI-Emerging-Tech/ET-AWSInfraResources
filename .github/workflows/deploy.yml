name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Which environment to deploy AWS resources for?
        options: [ demo, prod ]

jobs:
  test-lint:
    uses: ./.github/workflows/test-and-lint.yml
    name: Test and Lint
    secrets:
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-22.04
    needs: [test-lint]
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build & Push
        run: |
          set -e
          echo "${{ github.event.inputs.environment }}" > .workspace
          docker build --compress -t ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA .
          docker push ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA
          docker build --compress -t ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA proxy/
          docker push ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-22.04
    needs: [build-and-push]
    env:
      AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}

      # App images
      TF_VAR_ecr_app_image:   ${{ vars.ECR_REPO_APP }}:${{ github.sha }}
      TF_VAR_ecr_proxy_image: ${{ vars.ECR_REPO_PROXY }}:${{ github.sha }}
      TF_VAR_ecr_tools_image: ${{ vars.ECR_REPO_TOOLS }}:latest

      # App/config secrets
      TF_VAR_db_password:         ${{ secrets.TF_VAR_DB_PASSWORD }}
      TF_VAR_az_client_id:        ${{ secrets.TF_VAR_AZ_CLIENT_ID }}
      TF_VAR_az_tenant_id:        ${{ secrets.TF_VAR_AZ_TENANT_ID }}
      TF_VAR_users_table:         ${{ vars.USERS_TABLE }}
      TF_VAR_auth_secret:         ${{ secrets.TF_VAR_AUTH_SECRET }}
      TF_VAR_cd_github_access_token: ${{ secrets.TF_VAR_CD_GITHUB_ACCESS_TOKEN }}
      TF_VAR_django_secret_key:   ${{secrets.TF_VAR_DJANGO_SECRET_KEY}}

      # ðŸ”¸ AOSS parameters
      TF_VAR_collection_name:     ${{ vars.AOSS_COLLECTION_NAME }}
      AOSS_ALLOWED_PRINCIPALS:    ${{ vars.AOSS_ALLOWED_PRINCIPALS }} # CSV: arn:...,arn:...

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set workspace
        run: echo "${{ github.event.inputs.environment }}" > .workspace

      - name: Convert principals CSV to TF list
        shell: bash
        run: |
          if [ -n "${AOSS_ALLOWED_PRINCIPALS}" ]; then
            list=$(printf '%s' "${AOSS_ALLOWED_PRINCIPALS}" | awk -F, '{printf "["; for(i=1;i<=NF;i++){gsub(/^ *| *$/,"",$i); printf (i>1?", ":"") "\""$i"\""}; print "]"}')
            echo "TF_VAR_aoss_allowed_principals=${list}" >> $GITHUB_ENV
          fi

      - name: Terraform (deploy/)
        run: |
          set -e
          workspace=$(cat .workspace)
          cd infra/
          docker compose run --rm terraform -chdir=deploy/ init
          docker compose run --rm terraform -chdir=deploy/ workspace select -or-create $workspace
          docker compose run --rm terraform -chdir=deploy/ apply -auto-approve